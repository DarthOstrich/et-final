/*!
 * ET-Final
 * Emerging Technologies Final
 * 
 * @author Jared and Bridgett
 * @version 1.0.0
 * Copyright 2016. MIT licensed.
 */
@import 'https://fonts.googleapis.com/css?family=David+Libre';@import 'https://fonts.googleapis.com/css?family=Droid+Sans:400,700|Droid+Serif:400,700';html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}.clear:after,.clear:before{content:' ';display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s;background-color:#1b2835;background-image:linear-gradient(#1b2835,#0e3767)}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}header{max-width:68em;margin-left:auto;margin-right:auto}header:after{clear:both;content:"";display:table}.logo{position:absolute}.top-bar{float:left;display:block;margin-right:2.35765%;width:100%;background-color:#515151}.top-bar:last-child{margin-right:0}.mini-bar{float:left;display:block;margin-right:2.35765%;width:100%;background-color:#0c2745;padding-left:65px;padding-top:10px}.mini-bar:last-child{margin-right:0}.top-mini-nav{float:left;display:block;margin-right:2.35765%;width:40.29137%}.top-mini-nav:last-child{margin-right:0}.top-mini-nav li{color:#fff}.top-mini-nav li a{text-decoration:none;color:#fff;padding:10px}.facebook{float:left;display:block;margin-right:2.35765%;width:6.17215%}.facebook:last-child{margin-right:0}.facebook button{width:100%;line-height:26px}.search{float:left;display:block;margin-right:2.35765%;width:14.70196%}.search:last-child{margin-right:0}.search input{width:100%;border-radius:10px;border:none;padding:2px;line-height:26px}.donate{float:left;display:block;margin-right:2.35765%;width:31.76157%;line-height:26px}.donate,.donate:last-child{margin-right:0}nav ul li{display:inline-block;text-decoration:none}.top-nav{float:left;display:block;margin-right:2.35765%;width:100%;background-color:#515151;text-transform:uppercase}.top-nav:last-child{margin-right:0}.top-nav ul{background-color:#fff;padding:7px 7px 7px 100px}.top-nav li a{text-decoration:none;color:#938f8b;margin:21px}.nav ul{list-style:none}.sidebar{padding-left:10px}.sidebar ul ul{border-bottom:1px solid #cecccc}.sidebar ul{color:#1b2835;-webkit-padding-start:0;padding:5px}.sidebar ul>li{display:block;padding:5px}.sidebar .first-level{border-bottom:1px solid #cecccc}.sidebar .current{color:#f79714;position:relative}.sidebar .current:before{content:url(../img/style-arrow.png);position:absolute;left:15px;top:2px}.sidebar .second-level{padding:0 0 0 30px}.sidebar .donate,.sidebar .donate button{width:100%}.snippet{background:#f3f2f2;padding:20px}.snippet img,.snippet p{display:inline-block;width:48%}.snippet p{margin-left:2%}.main{float:left;display:block;margin-right:2.35765%;width:65.88078%}.main,.main:last-child{margin-right:0}.main img{width:100%}.main .services{padding-left:30px}.main .services h2{font-family:David Libre,serif;font-size:30px;color:#515151}.sidebar{float:left;display:block;margin-right:2.35765%;width:31.76157%}.sidebar:last-child{margin-right:0}.sidebar a{color:#091f37}.sidebar .date{font-size:25px;text-align:right;padding-right:20px}.sidebar .test-bg{background-color:#091f37;color:#fff;padding-left:18px}.sidebar .testimonials{background-color:#f5f5f5;padding-right:20px}.sidebar .testimonials a{color:#938f8b}.sidebar .testimonials img{float:right}.sidebar .sidenav{margin-top:20px}.sidebar .sidenav-bg{background-color:#ee8410;padding:5px;margin-top:1px}.sidebar .sidenav-bg a{text-decoration:none;color:#fff;padding:15px}.sidebar .fb-post{padding-right:20px}.header-image{position:relative;background:url(../img/services/1132.jpg);padding:100px 0;background-position:50%}.header-image h2{position:absolute;right:10px;top:0;color:#fff}article{float:left;display:block;margin-right:2.35765%;width:65.88078%}article:last-child{margin-right:0}aside{float:left;display:block;margin-right:2.35765%;width:31.76157%;margin-bottom:10px}aside:last-child{margin-right:0}#services .main{padding-right:20px;padding-left:20px;background-image:linear-gradient(#eceaea,#fff 16%)}#services .main>h1{display:inline-block;width:20%}#services .main .link-crumbs{display:inline-block;text-align:right;width:79%}#services article h1{font-size:1.25em;font-weight:400;color:#f79714}#services .news-feed h2{font-family:droid sans;color:#173f6b;border-bottom:1px solid #cecccc;margin-bottom:10px}#services .news-feed h4{font-size:.8em;font-weight:400;margin:0}#services .news-feed .date{color:#f79714;font-size:.75em;margin:0}#services .news-feed .byline{color:#c2c1c0}.footer{float:left;display:block;margin-right:2.35765%;width:100%;background-color:#0c2745}.footer:last-child{margin-right:0}.footer .footer-section{float:left;display:block;margin-right:2.35765%;width:23.23176%}.footer .footer-section:last-child{margin-right:0}.footer .footer-section h4{background-color:#091f37;text-align:center;padding:5px;color:#fff}.footer .footer-section li{color:#938f8b}.footer .footer-section:nth-of-type(4){text-align:center}.footer .footer-section img{margin-top:30px;max-height:75px}.copyright{max-width:68em;margin-left:auto;margin-right:auto;text-align:center;color:#fff}.copyright:after{clear:both;content:"";display:table}.donate button{background-image:linear-gradient(#f79714,#f79714 50%,#d4740d 0);border:none;padding:5px;width:80%;color:#fff;font-size:1.25em;text-align:center;font-family:'droid serif'}.donate button,.top-bar .donate{position:relative}.top-bar .donate button{margin-left:20%}.top-bar .donate button:before{content:"";position:absolute;width:0;height:0;border-top:18px solid transparent;border-right:11px solid #f79714;border-bottom:18px solid transparent;top:0;left:-11px}.top-bar .donate button:after{content:" ";top:13px;left:-20px;position:absolute;width:10px;height:10px;background-image:linear-gradient(#f79714,#f79714 50%,#d4740d 0);border-radius:50px}.donate-holder{position:relative}h1,h2,h3{font-family:Droid Serif,serif;font-weight:400}a{color:#f79714;text-decoration:none}a,a:hover{transition:all 1ms}a:hover{color:#d4740d!important}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}.container{max-width:68em;margin-left:auto;margin-right:auto;background-color:#fff;margin-top:-20px}.container:after{clear:both;content:"";display:table}@media only screen and (max-width:480px){.main{float:left;display:block;margin-right:2.35765%;width:100%}.main:last-child{margin-right:0}.sidebar{float:left;display:block;margin-right:2.35765%;width:100%}.sidebar:last-child{margin-right:0}.footer .footer-section{float:left;display:block;margin-right:2.35765%;width:100%}.footer .footer-section:last-child{margin-right:0}.logo img{width:50px;margin-top:10px}.mini-bar{padding-left:0}.top-nav li a{margin:5px}#services .main article,#services .main aside{float:left;display:block;margin-right:2.35765%;width:100%}#services .main article:last-child,#services .main aside:last-child{margin-right:0}}@media only screen and (max-width:768px){.mini-bar .top-mini-nav{width:100%}.mini-bar .donate,.mini-bar .facebook,.mini-bar .search{float:left;display:block;margin-right:2.35765%;width:31.76157%}.mini-bar .donate:last-child,.mini-bar .facebook:last-child,.mini-bar .search:last-child{margin-right:0}.top-nav ul{background-color:#fff;padding:7px}.top-nav li a{margin:19px}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;base64, */
